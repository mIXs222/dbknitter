v4_result = {
    "00000000": [
        "success_approx_manual",
        "success",
        "success",
        "success",
        "success_approx",
        "success",
        "success",
        "success_approx",
        "success_approx",
        "success",
        "success_approx",
        "success",
        "success",
        "success",
        "fail_wrong_output",
        "success",
        "success",
        "success",
        "success_approx_manual",
        "success",
        "success_approx",
        "success_approx",
    ],
    "11111111": [
        "fail_execute",
        "success_approx",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "success",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "success_approx",
        "success_approx",
        "fail_wrong_output",
        "fail_execute",
        "success",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "22222222": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "success",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "00001111": [
        "fail_execute",
        "fail_execute",
        "fail_timeout",
        "fail_execute",
        "fail_execute",
        "success",
        "fail_wrong_output",
        "success_approx",
        "fail_timeout",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_timeout",
        "fail_timeout",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "success_approx",
        "success_approx_manual",
    ],
    "00002222": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "success",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "11110000": [
        "fail_missing_output",
        "fail_execute",
        "success",
        "success",
        "fail_execute",
        "success",
        "fail_wrong_output",
        "fail_execute",
        "success_approx",
        "success_approx",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "success",
        "fail_execute",
        "success",
        "success",
        "success",
        "success_approx_manual",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
    ],
    "11112222": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "22220000": [
        "fail_execute",
        "fail_execute",
        "success",
        "success",
        "fail_execute",
        "fail_execute",
        "success",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "success",
        "fail_execute",
        "success",
        "success",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "22221111": [
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_timeout",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_timeout",
        "fail_timeout",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "01010101": [
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "success",
        "fail_execute",
        "fail_execute",
        "success",
        "success_approx",
        "fail_execute",
        "fail_wrong_output",
        "success_approx",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
    ],
    "02020202": [
        "fail_execute",
        "fail_execute",
        "success",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "10101010": [
        "fail_execute",
        "success_approx",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "success",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "success_approx",
        "success_approx",
        "fail_wrong_output",
        "fail_execute",
        "success",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "12121212": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "20202020": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "21212121": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_missing_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "01201201": [
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "02102102": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "10210210": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "success",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_timeout",
        "fail_execute",
        "success_approx_manual",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
    ],
    "12012012": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "20120120": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "21021021": [
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "success_approx",
        "success_approx",
        "fail_execute",
        "success_approx",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "00011122": [
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_timeout",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "00022211": [
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "success_approx",
        "fail_wrong_output",
        "fail_execute",
        "fail_timeout",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_timeout",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "11100022": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "11122200": [
        "fail_execute",
        "success_approx",
        "success",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "22200011": [
        "fail_execute",
        "fail_execute",
        "fail_timeout",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "success",
        "fail_execute",
        "success_approx",
        "fail_timeout",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "22211100": [
        "fail_execute",
        "fail_execute",
        "success",
        "success",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "success",
        "success",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
}


v4_engoff_result = {
    "00000000": [
        "success_approx_manual",
        "success",
        "fail_wrong_output",
        "fail_wrong_output",
        "success_approx_manual",
        "fail_wrong_output",
        "success_approx",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "success_approx",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "success_approx",
        "success_approx",
        "success_approx_manual",
        "fail_wrong_output",
        "fail_execute",
        "success_approx",
    ],
    "11111111": [
        "fail_wrong_output",
        "success_approx_manual",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_missing_output",
        "fail_wrong_output",
        "fail_timeout",
        "fail_timeout",
        "fail_parsing_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_timeout",
        "fail_wrong_output",
        "fail_execute",
        "fail_timeout",
        "fail_timeout",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_timeout",
    ],
    "22222222": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_missing_output",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
    ],
    "00001111": [
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "success_approx_manual",
        "fail_execute",
        "fail_wrong_output",
        "fail_timeout",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_timeout",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "00002222": [
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "11110000": [
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "success_approx",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "11112222": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_missing_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "22220000": [
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "success_approx",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "22221111": [
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_timeout",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_timeout",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "01010101": [
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "success_approx",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_timeout",
        "fail_execute",
        "fail_parsing_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "02020202": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "10101010": [
        "fail_execute",
        "success_approx",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "success",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
    ],
    "12121212": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "20202020": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "21212121": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_parsing_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "01201201": [
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_timeout",
        "fail_timeout",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "02102102": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "10210210": [
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "success_approx",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "12012012": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
    ],
    "20120120": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_missing_output",
    ],
    "21021021": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "00011122": [
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "00022211": [
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_timeout",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "11100022": [
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "11122200": [
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_missing_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "22200011": [
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_timeout",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_timeout",
        "fail_timeout",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "22211100": [
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
}


v4_engman_result = {
    "00000000": [
        "success_approx",
        "fail_wrong_output",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "success",
        "success_approx",
        "fail_wrong_output",
        "fail_missing_output",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_wrong_output",
        "success_approx",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "success",
        "success_approx",
        "fail_wrong_output",
        "fail_wrong_output",
        "success_approx_manual",
    ],
    "11111111": [
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "success_approx_manual",
        "fail_execute",
        "fail_timeout",
        "fail_timeout",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_timeout",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_timeout",
        "fail_timeout",
        "success_approx",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
    ],
    "22222222": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success",
        "fail_execute",
        "fail_execute",
    ],
    "00001111": [
        "fail_execute",
        "success_approx_manual",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_timeout",
        "success_approx",
        "fail_wrong_output",
        "fail_timeout",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_timeout",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
    ],
    "00002222": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "11110000": [
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_wrong_output",
        "fail_wrong_output",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "success",
        "fail_execute",
        "success_approx",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
    ],
    "11112222": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "22220000": [
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "success",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "22221111": [
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_timeout",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_timeout",
        "success_approx",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "01010101": [
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
    ],
    "02020202": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "10101010": [
        "fail_wrong_output",
        "fail_execute",
        "success_approx",
        "fail_wrong_output",
        "fail_wrong_output",
        "success",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "success_approx",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "success",
        "fail_execute",
        "success_approx",
        "fail_wrong_output",
        "success_approx",
        "fail_execute",
    ],
    "12121212": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_missing_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "20202020": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "21212121": [
        "fail_timeout",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "01201201": [
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "02102102": [
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "10210210": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "12012012": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
    ],
    "20120120": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "21021021": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "success_approx",
        "success",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "00011122": [
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "00022211": [
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_timeout",
        "fail_timeout",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "11100022": [
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "11122200": [
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "22200011": [
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_timeout",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "22211100": [
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "success",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "success",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
}


v4_enggpt_result = {
    "00000000": [
        "success",
        "fail_wrong_output",
        "success",
        "fail_wrong_output",
        "fail_wrong_output",
        "success",
        "success_approx",
        "fail_wrong_output",
        "fail_execute",
        "success_approx_manual",
        "success_approx",
        "success",
        "success",
        "fail_wrong_output",
        "fail_wrong_output",
        "success_approx_manual",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
    ],
    "11111111": [
        "fail_timeout",
        "fail_wrong_output",
        "fail_timeout",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "success_approx",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
    ],
    "22222222": [
        "fail_execute",
        "fail_execute",
        "success",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx_manual",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "00001111": [
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "success_approx",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "success_approx",
        "fail_execute",
        "fail_timeout",
        "success_approx",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
    ],
    "00002222": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "11110000": [
        "fail_wrong_output",
        "fail_wrong_output",
        "success",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "success_approx_manual",
        "success_approx",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
    ],
    "11112222": [
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "success",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "22220000": [
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "success_approx",
        "success",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "success_approx_manual",
        "success_approx",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "22221111": [
        "fail_execute",
        "fail_execute",
        "fail_timeout",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "01010101": [
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "success_approx",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_timeout",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "02020202": [
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "10101010": [
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_wrong_output",
        "success_approx_manual",
        "success",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "12121212": [
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "20202020": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx_manual",
        "success",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "21212121": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "01201201": [
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "02102102": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "10210210": [
        "fail_execute",
        "fail_wrong_output",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "success",
        "success_approx",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_timeout",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "12012012": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "20120120": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx_manual",
        "success_approx",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "21021021": [
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "00011122": [
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "00022211": [
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_timeout",
    ],
    "11100022": [
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "11122200": [
        "fail_execute",
        "fail_execute",
        "success",
        "fail_execute",
        "success_approx_manual",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_missing_output",
        "success_approx",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "22200011": [
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
    "22211100": [
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "success",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_execute",
        "success_approx",
        "fail_execute",
        "fail_wrong_output",
        "success_approx",
        "fail_execute",
        "fail_wrong_output",
        "fail_execute",
        "fail_execute",
        "fail_execute",
    ],
}


v4_errors = {
    "type": [
        r"""TypeError: '>=' not supported between instances of 'numpy.ndarray' and 'Timestamp'""",
        r"""TypeError: '>=' not supported between instances of 'str' and 'datetime.date'""",
        r"""TypeError: 'Collection' object is not iterable""",
        r"""TypeError: 'int' object is not subscriptable""",
        r"""TypeError: 'months' is an invalid keyword argument for __new__()""",
        r"""TypeError: 'months' is an invalid keyword argument for __new__()""",
        r"""TypeError: __init__() got an unexpected keyword argument 'hostname'""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: initial_value must be str or None, not DataFrame""",
        r"""TypeError: initial_value must be str or None, not DataFrame""",
        r"""TypeError: not enough arguments for format string""",
        r"""TypeError: strptime() argument 1 must be str, not datetime.date""",
        r"""TypeError: strptime() argument 1 must be str, not datetime.date""",
        r"""TypeError: strptime() argument 1 must be str, not datetime.date""",
        r"""TypeError: the JSON object must be str, bytes or bytearray, not DataFrame""",
        r"""TypeError: unsupported operand type(s) for *: 'decimal.Decimal' and 'float'""",
        r"""TypeError: unsupported operand type(s) for *: 'decimal.Decimal' and 'float'""",
        r"""TypeError: unsupported operand type(s) for *: 'decimal.Decimal' and 'float'""",
        r"""TypeError: unsupported operand type(s) for *: 'decimal.Decimal' and 'float'""",
        r"""TypeError: unsupported operand type(s) for *: 'float' and 'decimal.Decimal'""",
        r"""TypeError: unsupported operand type(s) for *: 'float' and 'decimal.Decimal'""",
        r"""TypeError: unsupported operand type(s) for +=: 'float' and 'decimal.Decimal'""",
        r"""TypeError: unsupported operand type(s) for +=: 'float' and 'decimal.Decimal'""",
        r"""TypeError: unsupported operand type(s) for +=: 'float' and 'decimal.Decimal'""",
        r"""TypeError: unsupported operand type(s) for /: 'decimal.Decimal' and 'float'""",
        r"""ValueError: Invalid file path or buffer object type: <class 'NoneType'>""",
        r"""ValueError: Invalid file path or buffer object type: <class 'pandas.core.frame.DataFrame'>""",
        r"""ValueError: Invalid file path or buffer object type: <class 'pandas.core.frame.DataFrame'>""",
        r"""ValueError: Invalid file path or buffer object type: <class 'pandas.core.frame.DataFrame'>""",
        r"""ValueError: Invalid file path or buffer object type: <class 'pandas.core.frame.DataFrame'>""",
        r"""ValueError: Invalid file path or buffer object type: <class 'pandas.core.frame.DataFrame'>""",
        r"""ValueError: Invalid file path or buffer object type: <class 'pandas.core.frame.DataFrame'>""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
    ],
    "library": [
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_dataframe'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas.compat' has no attribute 'StringIO'""",
        r"""AttributeError: module 'pymongo' has no attribute 'regex'""",
        r"""bson.errors.InvalidDocument: cannot encode object: Decimal('5021.995675799087'), of type: <class 'decimal.Decimal'>""",
        r"""ImportError: cannot import name 'json_normalize' from 'pandas.io.json' (/usr/local/lib/python3.8/dist-packages/pandas/io/json/__init__.py)""",
        r"""ImportError: cannot import name 'json_normalize' from 'pandas.io.json' (/usr/local/lib/python3.8/dist-packages/pandas/io/json/__init__.py)""",
        r"""ModuleNotFoundError: No module named 'redis_functions'""",
        r"""pymongo.errors.ConfigurationError: Unknown option database""",
        r"""pymongo.errors.ConfigurationError: Unknown option database""",
        r"""pymongo.errors.ConfigurationError: Unknown option db""",
        r"""pymongo.errors.ConfigurationError: Unknown option db""",
        r"""pymongo.errors.ConfigurationError: Unknown option hostname""",
        r"""pymongo.errors.InvalidOperation: Cannot use MongoClient after close""",
        r"""pymongo.errors.OperationFailure: Cannot do exclusion on field P_NAME in inclusion projection, full error: {'ok': 0.0, 'errmsg': 'Cannot do exclusion on field P_NAME in inclusion projection', 'code': 31254, 'codeName': 'Location31254'}""",
        r"""pymysql.err.OperationalError: (1305, 'FUNCTION tpch.strftime does not exist')""",
        r"""pymysql.err.OperationalError: (1305, 'FUNCTION tpch.strftime does not exist')""",
        r"""ValueError: 6 columns passed, passed data had 7 columns""",
        r"""ValueError: DataFrame constructor not properly called!""",
        r"""ValueError: If using all scalar values, you must pass an index""",
        r"""ValueError: max() arg is an empty sequence""",
        r"""ValueError: No objects to concatenate""",
    ],
    "schema": [
        r"""': (1054, "Unknown column 'C_CUSTKEY' in 'field list'")""",
        r"""': (1054, "Unknown column 'l_extendedprice' in 'field list'")""",
        r"""': (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""': (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""': (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""': (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""KeyError: "Only a column name can be used for the key in a dtype mappings argument. 'N_NATIONKEY' not found in columns." """,
        r"""KeyError: 'C_CUSTKEY'""",
        r"""KeyError: 'C_CUSTKEY'""",
        r"""KeyError: 'L_EXTENDEDPRICE'""",
        r"""KeyError: 'L_EXTENDEDPRICE'""",
        r"""KeyError: 'L_EXTENDEDPRICE'""",
        r"""KeyError: 'L_ORDERKEY'""",
        r"""KeyError: 'L_ORDERKEY'""",
        r"""KeyError: 'L_ORDERKEY'""",
        r"""KeyError: 'L_PARTKEY'""",
        r"""KeyError: 'L_PARTKEY'""",
        r"""KeyError: 'L_PARTKEY'""",
        r"""KeyError: 'L_PARTKEY'""",
        r"""KeyError: 'L_SHIPMODE'""",
        r"""KeyError: 'N_REGIONKEY'""",
        r"""KeyError: 'O_CUSTKEY'""",
        r"""KeyError: 'O_ORDERDATE'""",
        r"""KeyError: 'P_BRAND'""",
        r"""KeyError: 'P_PARTKEY'""",
        r"""KeyError: 'PS_SUPPKEY'""",
        r"""KeyError: 'SAUDI ARABIA'""",
        r"""NameError: name 'N_NATIONKEY' is not defined""",
        r"""NameError: name 'supplier_data' is not defined""",
        r"""NameError: name 'tpch_mongodb_conn_info' is not defined""",
        r"""pandas.errors.DatabaseError: Execution failed on sql 'SELECT * FROM orders': (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""pandas.errors.DatabaseError: Execution failed on sql 'SELECT * FROM supplier WHERE S_NATIONKEY IN (SELECT N_NATIONKEY FROM nation WHERE N_NAME = 'GERMANY')': (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'C_CUSTKEY' in 'where clause'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'N_NATIONKEY' in 'field list'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'S_NATIONKEY' in 'field list'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'S_NATIONKEY' in 'where clause'")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.customer' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.customer' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.customer' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.part' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.partsupp' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.partsupp' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.partsupp' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.partsupp' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
    ],
    "runtime": [
        r"""IndexError: list index out of range""",
        r"""pandas.errors.MergeError: Passing 'suffixes' which cause duplicate columns {'_id_x'} is not allowed.""",
        r"""UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte""",
        r"""UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte""",
        r"""UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte""",
        r"""UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte""",
    ],
    "syntax": [
        r"""pymysql.err.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') THEN 1\n            ELSE 0\n    END) AS HIGH_LINE_COUNT,\n    SUM(CASE\n          ' at line 4")""",
        r"""pymysql.err.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\nGROUP BY O_ORDERPRIORITY\nORDER BY O_ORDERPRIORITY' at line 4")""",
        r"""pymysql.err.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '53 AND L_QUANTITY < 4.0333333' at line 3")""",
        r"""pymysql.err.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '53 AND L_QUANTITY < 4.0333333' at line 3")""",
        r"""SyntaxError: invalid syntax""",
    ],
    "connection": [
        r"""redis.exceptions.ConnectionError: Error 99 connecting to localhost:6379. Cannot assign requested address.""",
        r"""pymysql.err.Error: Already closed""",
        r"""pymysql.err.Error: Already closed""",
        r"""pymysql.err.Error: Already closed""",
        r"""UnboundLocalError: local variable 'connection' referenced before assignment""",
    ],
}


v4_engoff_errors = {
    "type": [
        r"""TypeError: '>=' not supported between instances of 'NoneType' and 'str'""",
        r"""TypeError: 'NoneType' object is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: encoding without a string argument""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: query_mysql() takes 1 positional argument but 2 were given""",
        r"""TypeError: strptime() argument 1 must be str, not datetime.date""",
        r"""TypeError: the JSON object must be str, bytes or bytearray, not DataFrame""",
        r"""TypeError: the JSON object must be str, bytes or bytearray, not Series""",
        r"""TypeError: tuple indices must be integers or slices, not str""",
        r"""TypeError: tuple indices must be integers or slices, not str""",
        r"""TypeError: tuple indices must be integers or slices, not str""",
        r"""TypeError: tuple indices must be integers or slices, not str""",
        r"""TypeError: unsupported operand type(s) for *: 'decimal.Decimal' and 'float'""",
        r"""TypeError: unsupported operand type(s) for -: 'float' and 'decimal.Decimal'""",
        r"""ValueError: cannot convert float NaN to integer""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: Invalid file path or buffer object type: <class 'NoneType'>""",
        r"""ValueError: Invalid file path or buffer object type: <class 'pandas.core.frame.DataFrame'>""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
    ],
    "library": [
        r"""AttributeError: 'Cursor' object has no attribute 'count'""",
        r"""AttributeError: 'Cursor' object has no attribute 'count'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DirectRedis' object has no attribute 'command'""",
        r"""AttributeError: 'str' object has no attribute 'decode'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas.compat' has no attribute 'StringIO'""",
        r"""bson.errors.InvalidDocument: cannot encode object: <pymongo.cursor.Cursor object at 0xffff86334520>, of type: <class 'pymongo.cursor.Cursor'>""",
        r"""bson.errors.InvalidDocument: cannot encode object: <pymongo.cursor.Cursor object at 0xffffa5885d90>, of type: <class 'pymongo.cursor.Cursor'>""",
        r"""bson.errors.InvalidDocument: cannot encode object: Collection(Database(MongoClient(host=['mongodb:27017'], document_class=dict, tz_aware=False, connect=True), 'tpch'), 'partsupp'), of type: <class 'pymongo.collection.Collection'>""",
        r"""ModuleNotFoundError: No module named 'redis.clients'""",
        r"""pymongo.errors.ConfigurationError: Unknown option db""",
        r"""pymongo.errors.OperationFailure: An object representing an expression must have exactly one field: { $lte: [ { $dateFromString: { dateString: "$P_RETAILPRICE.promo_start_date" } }, new Date(809913600000) ], $gte: [ { $dateFromString: { dateString: "$P_RETAILPRICE.promo_end_date" } }, new Date(812505600000) ] }, full error: {'ok': 0.0, 'errmsg': 'An object representing an expression must have exactly one field: { $lte: [ { $dateFromString: { dateString: "$P_RETAILPRICE.promo_start_date" } }, new Date(809913600000) ], $gte: [ { $dateFromString: { dateString: "$P_RETAILPRICE.promo_end_date" } }, new Date(812505600000) ] }', 'code': 15983, 'codeName': 'Location15983'}""",
        r"""pymongo.errors.OperationFailure: Invalid $project :: caused by :: Unrecognized expression '$regex', full error: {'ok': 0.0, 'errmsg': "Invalid $project :: caused by :: Unrecognized expression '$regex'", 'code': 168, 'codeName': 'InvalidPipelineOperator'}""",
        r"""UnboundLocalError: local variable 'country_code' referenced before assignment""",
        r"""redis.exceptions.ResponseError: WRONGTYPE Operation against a key holding the wrong kind of value""",
        r"""redis.exceptions.ResponseError: WRONGTYPE Operation against a key holding the wrong kind of value""",
        r"""ValueError: 8 columns passed, passed data had 7 columns""",
        r"""ValueError: DataFrame constructor not properly called!""",
        r"""ValueError: DataFrame constructor not properly called!""",
        r"""ValueError: DataFrame constructor not properly called!""",
    ],
    "schema": [
        r"""': (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""': (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""': (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""': (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""': (1146, "Table 'tpch.part' doesn't exist")""",
        r"""': (1146, "Table 'tpch.partsupp' doesn't exist")""",
        r"""': (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""': (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""': (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""GROUP BY s.S_NATIONKEY, YEAR(o.O_ORDERDATE)': (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""KeyError: "Only a column name can be used for the key in a dtype mappings argument. 'P_PARTKEY' not found in columns." """,
        r"""KeyError: 'L_EXTENDEDPRICE'""",
        r"""KeyError: 'L_PARTKEY'""",
        r"""KeyError: 'L_SUPPKEY'""",
        r"""KeyError: 'N_NATIONKEY'""",
        r"""KeyError: 'nation_key'""",
        r"""KeyError: 'O_CUSTKEY'""",
        r"""KeyError: 'O_ORDERKEY'""",
        r"""KeyError: 'O_ORDERKEY'""",
        r"""KeyError: 'orders_count'""",
        r"""KeyError: 'P_NAME'""",
        r"""KeyError: 'P_NAME'""",
        r"""KeyError: 'P_PARTKEY'""",
        r"""KeyError: 'P_QUANTITY'""",
        r"""KeyError: 'S_NATIONKEY'""",
        r"""KeyError: 'S_SUPPKEY'""",
        r"""KeyError: 10783""",
        r"""NameError: name 'seven_years_ago' is not defined""",
        r"""pandas.errors.DatabaseError: Execution failed on sql 'SELECT * FROM supplier WHERE S_NATIONKEY = (SELECT N_NATIONKEY FROM nation WHERE N_NAME = "SAUDI ARABIA");': (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'l.L_DISCOUNT' in 'field list'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'l.L_EXTENDEDPRICE' in 'field list'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'l.L_EXTENDEDPRICE' in 'field list'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'l.PS_SUPPKEY' in 'field list'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'n.N_NAME' in 'field list'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'p.P_TYPE' in 'field list'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'P_PROMO' in 'where clause'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'r.R_REGIONKEY' in 'on clause'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'S_NAME' in 'order clause'")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.customer' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.part' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.part' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.part' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.part' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.part' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.partsupp' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.partsupp' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.partsupp' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.region' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.region' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.region' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
    ],
    "runtime": [
        r"""IndexError: tuple index out of range""",
        r"""UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte""",
        r"""UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte""",
        r"""UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte""",
        r"""UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte""",
        r"""UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte""",
        r"""UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte""",
        r"""UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte""",
        r"""ValueError: Length mismatch: Expected axis has 0 elements, new values have 2 elements""",
        r"""ValueError: source code string cannot contain null bytes""",
        r"""ValueError: source code string cannot contain null bytes""",
    ],
    "syntax": [
        r"""': (1055, "Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.c.C_NAME' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""': (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.c.C_NAME' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.c.C_NAME' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.c.C_NAME' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.c.C_NAME' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.c.C_NAME' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.c.C_NAME' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.o.O_CUSTKEY' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.s.S_NAME' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.c.C_NAME' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.o.O_SHIPPRIORITY' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.o.O_SHIPPRIORITY' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.s.S_NAME' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (3593, "You cannot use the window function 'sum' in this context.'")""",
        r"""pymysql.err.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 4")""",
        r"""pymysql.err.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '))\n    AND L_QUANTITY >= 1 AND L_QUANTITY <= 11\n    AND L_SHIPMODE IN ('AIR', 'A' at line 3")""",
        r"""pymysql.err.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\nGROUP BY LEFT(C_PHONE, 2)' at line 5")""",
        r"""pymysql.err.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\nWHERE ps.PS_SUPPLYCOST = (\n    SELECT MIN(PS_SUPPLYCOST)\n    FROM partsupp\n   ' at line 5")""",
        r"""pymysql.err.ProgrammingError: Cursor closed""",
        r"""redis.exceptions.ConnectionError: Error 99 connecting to localhost:6379. Cannot assign requested address.""",
    ],
    "connection": [
        r"""pymysql.err.Error: Already closed""",
        r"""pymysql.err.InterfaceError: (0, '')""",
        r"""UnboundLocalError: local variable 'conn' referenced before assignment""",
    ],
}


v4_engman_errors = {
    "type": [
        r"""TypeError: %d format: a number is required, not dict""",
        r"""TypeError: '>' not supported between instances of 'datetime.date' and 'str'""",
        r"""TypeError: 'Collection' object is not callable. If you meant to call the 'close' method on a 'Database' object it is failing because no such method exists.""",
        r"""TypeError: __init__() got an unexpected keyword argument 'hostname'""",
        r"""TypeError: __new__() missing 1 required positional argument: 'aggfunc'""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: Expected file path name or file-like object, got <class 'bytes'> type""",
        r"""TypeError: func is expected but received NamedAgg in **kwargs.""",
        r"""TypeError: getaddrinfo() argument 1 must be string or None""",
        r"""TypeError: initial_value must be str or None, not DataFrame""",
        r"""TypeError: initial_value must be str or None, not DataFrame""",
        r"""TypeError: Must provide 'func' or tuples of '(column, aggfunc).""",
        r"""TypeError: not enough arguments for format string""",
        r"""TypeError: strptime() argument 1 must be str, not datetime.date""",
        r"""TypeError: strptime() argument 1 must be str, not datetime.date""",
        r"""TypeError: the JSON object must be str, bytes or bytearray, not DataFrame""",
        r"""TypeError: the JSON object must be str, bytes or bytearray, not DataFrame""",
        r"""TypeError: the JSON object must be str, bytes or bytearray, not DataFrame""",
        r"""TypeError: the JSON object must be str, bytes or bytearray, not DataFrame""",
        r"""TypeError: the JSON object must be str, bytes or bytearray, not DataFrame""",
        r"""TypeError: tuple indices must be integers or slices, not str""",
        r"""TypeError: tuple indices must be integers or slices, not str""",
        r"""TypeError: unsupported operand type(s) for *: 'decimal.Decimal' and 'float'""",
        r"""TypeError: unsupported operand type(s) for *: 'float' and 'decimal.Decimal'""",
        r"""TypeError: unsupported operand type(s) for +=: 'float' and 'decimal.Decimal'""",
        r"""TypeError: unsupported operand type(s) for +=: 'float' and 'decimal.Decimal'""",
        r"""ValueError: Invalid file path or buffer object type: <class 'NoneType'>""",
        r"""ValueError: Invalid file path or buffer object type: <class 'pandas.core.frame.DataFrame'>""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: invalid literal for int() with base 10: 'Brand#13'""",
    ],
    "library": [
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DirectRedis' object has no attribute 'get_df'""",
        r"""AttributeError: 'str' object has no attribute 'decode'""",
        r"""AttributeError: module 'bson.json_util' has no attribute 'objectid_hook'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas.compat' has no attribute 'StringIO'""",
        r"""AttributeError: module 'pymongo' has no attribute 'regex'""",
        r"""bson.errors.InvalidDocument: cannot encode object: <pymongo.cursor.Cursor object at 0xffff9a5b2970>, of type: <class 'pymongo.cursor.Cursor'>""",
        r"""ModuleNotFoundError: No module named 'sqlalchemy'""",
        r"""pyarrow.lib.ArrowInvalid: Called Open() on an uninitialized FileSource""",
        r"""pymongo.errors.ConfigurationError: Unknown option db""",
        r"""pymongo.errors.OperationFailure: Invalid $project :: caused by :: Unrecognized expression '$nin', full error: {'ok': 0.0, 'errmsg': "Invalid $project :: caused by :: Unrecognized expression '$nin'", 'code': 168, 'codeName': 'InvalidPipelineOperator'}""",
        r"""pymongo.errors.OperationFailure: PlanExecutor error during aggregation :: caused by :: can't convert from BSON type string to Date, full error: {'ok': 0.0, 'errmsg': "PlanExecutor error during aggregation :: caused by :: can't convert from BSON type string to Date", 'code': 16006, 'codeName': 'Location16006'}""",
    ],
    "schema": [
        r"""': (1054, "Unknown column 'O_ORDERDATE' in 'where clause'")""",
        r"""': (1054, "Unknown column 's.N_NAME' in 'field list'")""",
        r"""': (1146, "Table 'tpch.customer' doesn't exist")""",
        r"""': (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""': (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""': (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""': (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""': (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""': (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""': (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""': (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""': (1146, "Table 'tpch.part' doesn't exist")""",
        r"""': (1146, "Table 'tpch.supplier' doesn't exist")""",
        r""")': (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""FileNotFoundError: [Errno 2] No such file or directory: ''""",
        r"""FileNotFoundError: [Errno 2] No such file or directory: ''""",
        r"""FileNotFoundError: File direct_redis://DirectRedis<ConnectionPool<Connection<host=redis,port=6379,db=0>>>/orders does not exist""",
        r"""KeyError: "None of [Index(['C_CUSTKEY', 'C_NATIONKEY'], dtype='object')] are in the [columns]" """,
        r"""KeyError: '_id'""",
        r"""KeyError: '_NATIONKEY'""",
        r"""KeyError: 'C_NATIONKEY'""",
        r"""KeyError: 'id'""",
        r"""KeyError: 'L_EXTENDEDPRICE'""",
        r"""KeyError: 'L_EXTENDEDPRICE'""",
        r"""KeyError: 'L_EXTENDEDPRICE'""",
        r"""KeyError: 'L_EXTENDEDPRICE'""",
        r"""KeyError: 'N_NATIONKEY'""",
        r"""KeyError: 'O_CUSTKEY'""",
        r"""KeyError: 'O_CUSTKEY'""",
        r"""KeyError: 'O_CUSTKEY'""",
        r"""KeyError: 'O_ORDERKEY'""",
        r"""KeyError: 'P_BRAND'""",
        r"""KeyError: 'P_PARTKEY'""",
        r"""KeyError: 'P_PARTKEY'""",
        r"""KeyError: 'P_PARTKEY'""",
        r"""KeyError: 'P_PARTKEY'""",
        r"""KeyError: 'P_PARTKEY'""",
        r"""KeyError: 'P_PARTKEY'""",
        r"""KeyError: 'P_PARTKEY'""",
        r"""KeyError: 'PS_PARTKEY'""",
        r"""KeyError: 'S_SUPPKEY'""",
        r"""KeyError: 'S_SUPPKEY'""",
        r"""KeyError: 'S_SUPPKEY'""",
        r"""KeyError: 'S_SUPPKEY'""",
        r"""KeyError: 'STATUS'""",
        r"""NameError: name 'about_text' is not defined""",
        r"""NameError: name 'query_part_keys_brand_12' is not defined""",
        r"""NameError: name 'top_suppliers' is not defined""",
        r"""pandas.errors.DatabaseError: Execution failed on sql 'SELECT C_CUSTKEY, C_NATIONKEY FROM customer WHERE C_NATIONKEY IN (SELECT N_NATIONKEY FROM nation WHERE N_NAME = 'INDIA' OR N_NAME = 'JAPAN');': (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'C_CUSTKEY' in 'field list'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'C_CUSTKEY' in 'field list'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'L.S_SUPPKEY' in 'field list'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'L_CUSTKEY' in 'field list'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'L_QUANTITY' in 'having clause'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'n_nationkey' in 'field list'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'O_ORDERPRIORITY' in 'field list'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'P_PROMOFLAG' in 'field list'")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.customer' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.customer' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.customer' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.part' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.part' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.part' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.part' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.part' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.part' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.part' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.partsupp' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.partsupp' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.region' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.region' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.region' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.region' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.region' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""ValueError: dict contains fields not in fieldnames: '_id'""",
    ],
    "runtime": [
        r"""UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte""",
        r"""UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte""",
        r"""UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte""",
        r"""UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte""",
        r"""ValueError: Length mismatch: Expected axis has 0 elements, new values have 2 elements""",
        r"""ValueError: Length mismatch: Expected axis has 0 elements, new values have 2 elements""",
        r"""ValueError: Length mismatch: Expected axis has 1 elements, new values have 2 elements""",
        r"""ValueError: Length mismatch: Expected axis has 6 elements, new values have 5 elements""",
        r"""ValueError: unsupported format character ''' (0x27) at index 259""",
        r"""ZeroDivisionError: division by zero""",
    ],
    "syntax": [
        r"""': (1055, "Expression #3 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.c.C_MKTSEGMENT' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.c.C_NAME' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.o.O_CUSTKEY' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.orders.O_CUSTKEY' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.s.S_NAME' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.s.S_NAME' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.supplier.S_NAME' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #3 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.lineitem.L_COMMITDATE' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #3 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.lineitem.L_EXTENDEDPRICE' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '%s AND P_TYPE = 'SMALL PLATED COPPER' OR YEAR(O_ORDERDATE) = %s AND P_TYPE = 'SM' at line 6")""",
        r"""pymysql.err.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') \n  AND L_QUANTITY < 20 / 100 * (SELECT AVG(L_QUANTITY) FROM lineitem)' at line 2")""",
        r"""pymysql.err.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') AND PS_SUPPKEY IN (7, 16, 17, 25, 32, 33, 40, 42, 44, 52, 53, 62, 65, 66, 70, ' at line 3")""",
        r"""pymysql.err.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 3")""",
        r"""pymysql.err.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 3")""",
        r"""pymysql.err.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 3")""",
        r"""pymysql.err.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\n    GROUP BY ps.PS_PARTKEY, ps.PS_SUPPKEY\n    HAVING min_cost = (\n        SELE' at line 4")""",
        r"""SyntaxError: Generator expression must be parenthesized""",
        r"""SyntaxError: invalid syntax""",
    ],
    "connection": [
        r"""pymysql.err.Error: Already closed""",
        r"""pymysql.err.Error: Already closed""",
    ],
}


v4_enggpt_errors = {
    "type": [
        r"""TypeError: '<=' not supported between instances of 'datetime.datetime' and 'str'""",
        r"""TypeError: 'int' object is not subscriptable""",
        r"""TypeError: 'int' object is not subscriptable""",
        r"""TypeError: __init__() got an unexpected keyword argument 'hostname'""",
        r"""TypeError: __init__() got an unexpected keyword argument 'hostname'""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: argument of type 'method' is not iterable""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: eval() arg 1 must be a string, bytes or code object""",
        r"""TypeError: not all arguments converted during string formatting""",
        r"""TypeError: not enough arguments for format string""",
        r"""TypeError: strptime() argument 1 must be str, not datetime.date""",
        r"""TypeError: the JSON object must be str, bytes or bytearray, not DataFrame""",
        r"""TypeError: the JSON object must be str, bytes or bytearray, not DataFrame""",
        r"""TypeError: the JSON object must be str, bytes or bytearray, not DataFrame""",
        r"""TypeError: tuple indices must be integers or slices, not str""",
        r"""TypeError: unsupported operand type(s) for *: 'decimal.Decimal' and 'float'""",
        r"""TypeError: unsupported operand type(s) for *: 'float' and 'decimal.Decimal'""",
        r"""ValueError: Expected object or value""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
        r"""ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().""",
    ],
    "library": [
        r"""AttributeError: 'DataFrame' object has no attribute 'append'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'decode'""",
        r"""AttributeError: 'DataFrame' object has no attribute 'P_SIZE'""",
        r"""AttributeError: 'DirectRedis' object has no attribute 'get_df'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas' has no attribute 'read_msgpack'""",
        r"""AttributeError: module 'pandas.compat' has no attribute 'StringIO'""",
        r"""AttributeError: module 'pandas.compat' has no attribute 'StringIO'""",
        r"""AttributeError: module 'redis' has no attribute 'DirectRedis'""",
        r"""bson.errors.InvalidDocument: cannot encode object: dict_values([18, 12]), of type: <class 'dict_values'>""",
        r"""ImportError: cannot import name 'json_normalize' from 'pandas.io.json' (/usr/local/lib/python3.8/dist-packages/pandas/io/json/__init__.py)""",
        r"""ImportError: cannot import name 'json_normalize' from 'pandas.io.json' (/usr/local/lib/python3.8/dist-packages/pandas/io/json/__init__.py)""",
        r"""ModuleNotFoundError: No module named 'redis.commands'""",
        r"""ValueError: 3 columns passed, passed data had 16 columns""",
    ],
    "schema": [
        r"""': (1054, "Unknown column 'c.C_NAME' in 'field list'")""",
        r"""': (1054, "Unknown column 'l_extendedprice' in 'field list'")""",
        r"""': (1054, "Unknown column 'L_SIZE' in 'where clause'")""",
        r"""': (1146, "Table 'tpch.customer' doesn't exist")""",
        r"""': (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""': (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""': (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""': (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""': (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""': (1146, "Table 'tpch.part' doesn't exist")""",
        r"""': (1146, "Table 'tpch.partsupp' doesn't exist")""",
        r"""KeyError: "['O_CUSTKEY', 'O_ORDERDATE', 'O_TOTALPRICE', 'L_QUANTITY'] not in index" """,
        r"""KeyError: "None of ['O_ORDERKEY'] are in the columns" """,
        r"""KeyError: '_id'""",
        r"""KeyError: 'ADJ_EXTENDEDPRICE'""",
        r"""KeyError: 'C_CUSTKEY'""",
        r"""KeyError: 'C_PHONE'""",
        r"""KeyError: 'L_EXTENDEDPRICE'""",
        r"""KeyError: 'L_EXTENDEDPRICE'""",
        r"""KeyError: 'L_PARTKEY'""",
        r"""KeyError: 'L_PARTKEY'""",
        r"""KeyError: 'L_PARTKEY'""",
        r"""KeyError: 'L_PARTKEY'""",
        r"""KeyError: 'L_SUPPKEY'""",
        r"""KeyError: 'N_NAME'""",
        r"""KeyError: 'N_NAME'""",
        r"""KeyError: 'N_NATIONKEY'""",
        r"""KeyError: 'N_REGIONKEY'""",
        r"""KeyError: 'N_REGIONKEY'""",
        r"""KeyError: 'O_CUSTKEY'""",
        r"""KeyError: 'P_BRAND'""",
        r"""KeyError: 'P_PARTKEY'""",
        r"""KeyError: 'P_TYPE'""",
        r"""KeyError: 'R_REGIONKEY'""",
        r"""KeyError: 'S_NATIONKEY'""",
        r"""NameError: name 'redis_db_name' is not defined""",
        r"""pandas.errors.DatabaseError: Execution failed on sql 'SELECT * FROM supplier WHERE S_NATIONKEY=(SELECT N_NATIONKEY FROM nation WHERE N_NAME='GERMANY')': (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1049, "Unknown database 'tpch'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'l.L_EXTENDEDPRICE' in 'field list'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'l.L_EXTENDEDPRICE' in 'field list'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'n.N_NAME' in 'field list'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'n1.N_NAME' in 'field list'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'o.O_ORDERKEY' in 'field list'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 'O_NATIONKEY' in 'field list'")""",
        r"""pymysql.err.OperationalError: (1054, "Unknown column 's.N_NATIONKEY' in 'on clause'")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.customer' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.customer' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.customer' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.customer' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.lineitem' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.nation' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.orders' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.part' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.part' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.part' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.part' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.partsupp' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.region' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.region' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""pymysql.err.ProgrammingError: (1146, "Table 'tpch.supplier' doesn't exist")""",
        r"""ValueError: dict contains fields not in fieldnames: '_id'""",
        r"""ValueError: time data '1996-01-02' does not match format '%Y-%m-%d %H:%M:%S'""",
        r"""ValueError: time data '1998-02-18' does not match format '%Y-%m-%d %H:%M:%S'""",
    ],
    "runtime": [
        r"""IndexError: list index out of range""",
        r"""IndexError: tuple index out of range""",
        r"""IndexError: tuple index out of range""",
        r"""statistics.StatisticsError: mean requires at least one data point""",
        r"""StopIteration""",
        r"""UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte""",
        r"""UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte""",
        r"""UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte""",
        r"""UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte""",
        r"""ValueError: max() arg is an empty sequence""",
        r"""ValueError: max() arg is an empty sequence""",
        r"""ValueError: unsupported format character 'B' (0x42) at index 55""",
        r"""ValueError: unsupported format character 'p' (0x70) at index 156""",
    ],
    "syntax": [
        r"""pymongo.errors.OperationFailure: PlanExecutor error during aggregation :: caused by :: can't convert from BSON type string to Date, full error: {'ok': 0.0, 'errmsg': "PlanExecutor error during aggregation :: caused by :: can't convert from BSON type string to Date", 'code': 16006, 'codeName': 'Location16006'}""",
        r"""pymongo.errors.OperationFailure: unknown operator: $between, full error: {'ok': 0.0, 'errmsg': 'unknown operator: $between', 'code': 2, 'codeName': 'BadValue'}""",
        r"""pymongo.errors.OperationFailure: unknown top level operator: $match. If you have a field name that starts with a '$' symbol, consider using $getField or $setField., full error: {'ok': 0.0, 'errmsg': "unknown top level operator: $match. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.", 'code': 2, 'codeName': 'BadValue'}""",
        r"""pymysql.err.OperationalError: (1055, "Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.c.C_NAME' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.orders.O_ORDERDATE' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.c.C_NAME' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.o.O_CUSTKEY' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.OperationalError: (1055, "Expression #4 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tpch.lineitem.L_EXTENDEDPRICE' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by")""",
        r"""pymysql.err.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 3")""",
        r"""pymysql.err.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 3")""",
        r"""SyntaxError: invalid syntax""",
    ],
    "connection": [
        r"""pymongo.errors.OperationFailure: Authentication failed., full error: {'ok': 0.0, 'errmsg': 'Authentication failed.', 'code': 18, 'codeName': 'AuthenticationFailed'}""",
    ],
}




query_idxs = [
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    1,
    20,
    21,
    22,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
]

def label_query(result):
    labeled_result = {}
    for m, qgrades in result.items():
        assert len(qgrades) == len(query_idxs)
        labeled_result[m] = {qidx: qgrade for qidx, qgrade in zip(query_idxs, qgrades)}
    return labeled_result

v4_result = label_query(v4_result)
v4_engoff_result = label_query(v4_engoff_result)
v4_engman_result = label_query(v4_engman_result)
v4_enggpt_result = label_query(v4_enggpt_result)

# print(v4_result)


# Plot 0: Overall stats
def print_overall_stats(result):
    num_successes = 0
    num_cases = 0
    for qidx in range(1, 22 + 1):
        num_successes += len([1 for _, qgrades in result.items() if "success" in qgrades[qidx]])
        num_cases += len(result)
    print(f"Accuracy: {100 * num_successes / num_cases}")

print("% print_overall_stats")
print_overall_stats(v4_result)
print_overall_stats(v4_engoff_result)
print_overall_stats(v4_engman_result)
print_overall_stats(v4_enggpt_result)


# Plot 1: Accuracy by query
def print_acc_by_query(result):
    print(r"\addplot coordinates {")
    for qidx in range(1, 22 + 1):
        num_successes = len([1 for _, qgrades in result.items() if "success" in qgrades[qidx]])
        print(f"\t({qidx}, {100 * num_successes / len(result)})")
    print(r"};")

print("% print_acc_by_query")
print_acc_by_query(v4_result)
print_acc_by_query(v4_engoff_result)
print_acc_by_query(v4_engman_result)
print_acc_by_query(v4_enggpt_result)


# Plot 1 (with sorting): Accuracy by query
accs = []
for qidx in range(1, 22 + 1):
    num_successes = len([1 for _, qgrades in v4_result.items() if "success" in qgrades[qidx]])
    accs.append(100 * num_successes / len(v4_result))
rev_idxs = sorted(range(22), key=lambda x: -accs[x])

def print_acc_by_query_sort(result):
    print(r"\addplot coordinates {")
    accs = []
    for qidx in range(1, 22 + 1):
        num_successes = len([1 for _, qgrades in result.items() if "success" in qgrades[qidx]])
        accs.append(100 * num_successes / len(result))
    for qidx in range(1, 22 + 1):
        print(f"\t({qidx}, {accs[rev_idxs[qidx - 1]]})")
    print(r"};")

# print([idx + 1 for idx in rev_idxs])
# print_acc_by_query_sort(v4_result)
# print_acc_by_query_sort(v4_engoff_result)
# print_acc_by_query_sort(v4_engman_result)
# print_acc_by_query_sort(v4_enggpt_result)


# Plot 2: Accuracy by combination
combinations = {
    1: ["00000000"],  # A
    2: ["11111111"],  # B
    3: ["22222222"],  # C
    4: ["00001111", "11110000", "01010101", "10101010"],  # A + B
    5: ["00002222", "22220000", "02020202", "20202020"],  # A + C
    6: ["11112222", "22221111", "12121212", "21212121"],  # B + C
    7: ["01201201", "02102102", "10210210", "12012012", "20120120",
        "21021021", "00011122", "00022211", "11100022", "11122200",
        "22200011", "22211100"],  # A + B + C
}
def print_acc_by_combination(result):
    print(r"\addplot coordinates {")
    for cidx, mappings in combinations.items():
        num_successes, num_cases = 0, 0
        for mapping in mappings:
            qgrades = result[mapping]
            num_successes += len([1 for _, qgrade in qgrades.items() if "success" in qgrade])
            num_cases += len(qgrades)
        print(f"\t({cidx}, {100 * num_successes / num_cases})")
    print(r"};")

print("% print_acc_by_combination")
print_acc_by_combination(v4_result)
print_acc_by_combination(v4_engoff_result)
print_acc_by_combination(v4_engman_result)
print_acc_by_combination(v4_enggpt_result)


# Plot 3: Failure breakdown
failure_types = {
    1: ["fail_execute"],
    2: ["fail_wrong_output", "fail_missing_output", "fail_parsing_output"],
    3: ["fail_timeout"],
}
def print_acc_by_failure_type(result):
    print(r"\addplot coordinates {")
    for fidx, failures in failure_types.items():
        num_failures, num_cases = 0, 0
        for _, qgrades in result.items():
            num_failures += len([1 for _, qgrade in qgrades.items() if qgrade in failures])
            num_cases += len([1 for _, qgrade in qgrades.items() if "fail" in qgrade])
        print(f"\t({fidx}, {100 * num_failures / num_cases})")
    print(r"};")

print("% print_acc_by_failure_type")
print_acc_by_failure_type(v4_result)
print_acc_by_failure_type(v4_engoff_result)
print_acc_by_failure_type(v4_engman_result)
print_acc_by_failure_type(v4_enggpt_result)


# Plot 4: Accuracy by number of tables in query
num_tables_by_query = {
    1: 1,
    2: 5,
    3: 3,
    4: 2,
    5: 6,
    6: 1,
    7: 5,
    8: 7,
    9: 6,
    10: 4,
    11: 3,
    12: 2,
    13: 2,
    14: 2,
    15: 2,
    16: 3,
    17: 2,
    18: 3,
    19: 2,
    20: 5,
    21: 4,
    22: 2,
}
queries_by_num_tables = {num_tables: [] for _, num_tables in num_tables_by_query.items()}
for query, num_tables in num_tables_by_query.items():
    queries_by_num_tables[num_tables].append(query)
def print_acc_by_table_nums(result):
    print(r"\addplot coordinates {")
    for table_nums in sorted(queries_by_num_tables):
        num_successes, num_cases = 0, 0
        for qidx in queries_by_num_tables[table_nums]:
            num_successes += len([1 for _, qgrades in result.items() if "success" in qgrades[qidx]])
            num_cases += len(result)
        print(f"\t({table_nums}, {100 * num_successes / num_cases})")
    print(r"};")

print("% print_acc_by_table_nums")
print_acc_by_table_nums(v4_result)
print_acc_by_table_nums(v4_engoff_result)
print_acc_by_table_nums(v4_engman_result)
print_acc_by_table_nums(v4_enggpt_result)


# Plot 5: Errors
error_types = [
    "type",
    "library",
    "schema",
    "runtime",
    "syntax",
    "connection",
]
def print_error_percent(result):
    print(r"\addplot coordinates {")
    num_cases = sum(len(cases) for _, cases in result.items())
    for idx, error_type in enumerate(error_types):
        print(f"\t({idx + 1}, {100 * len(result[error_type]) / num_cases})")
    print(r"};")

print("% print_error_percent")
print_error_percent(v4_errors)
print_error_percent(v4_engoff_errors)
print_error_percent(v4_engman_errors)
print_error_percent(v4_enggpt_errors)
